<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tsy.oa.dao.EmpRegularizationDao">

    <resultMap type="com.tsy.oa.entity.EmpRegularization" id="EmpRegularizationMap">
        <result property="regularizationid" column="regularizationid" jdbcType="INTEGER"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="applicant" column="applicant" jdbcType="VARCHAR"/>
        <result property="applyDept" column="apply_dept" jdbcType="VARCHAR"/>
        <result property="regularizationEmp" column="regularization_emp" jdbcType="VARCHAR"/>
        <result property="regularizationDept" column="regularization_dept" jdbcType="VARCHAR"/>
        <result property="intodate" column="intodate" jdbcType="TIMESTAMP"/>
        <result property="applyDate" column="apply_date" jdbcType="TIMESTAMP"/>
        <result property="jopUnderstand" column="jop_understand" jdbcType="VARCHAR"/>
        <result property="growup" column="growup" jdbcType="VARCHAR"/>
        <result property="deficiency" column="deficiency" jdbcType="VARCHAR"/>
        <result property="regularizationState" column="regularization_state" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="EmpRegularizationMap">
        select
          regularizationid, title, applicant, apply_dept, regularization_emp, regularization_dept, intodate, apply_date, jop_understand, growup, deficiency, regularization_state
        from oa.emp_regularization
        where regularizationid = #{regularizationid}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="EmpRegularizationMap">
        select
          regularizationid, title, applicant, apply_dept, regularization_emp, regularization_dept, intodate, apply_date, jop_understand, growup, deficiency, regularization_state
        from oa.emp_regularization
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="EmpRegularizationMap">
        select
        regularizationid, title, applicant, apply_dept, regularization_emp, regularization_dept, intodate, apply_date,
        jop_understand, growup, deficiency, regularization_state
        from oa.emp_regularization
        <where>
            <if test="regularizationid != null">
                and regularizationid = #{regularizationid}
            </if>
            <if test="title != null and title != ''">
                and title = #{title}
            </if>
            <if test="applicant != null and applicant != ''">
                and applicant = #{applicant}
            </if>
            <if test="applyDept != null and applyDept != ''">
                and apply_dept = #{applyDept}
            </if>
            <if test="regularizationEmp != null and regularizationEmp != ''">
                and regularization_emp = #{regularizationEmp}
            </if>
            <if test="regularizationDept != null and regularizationDept != ''">
                and regularization_dept = #{regularizationDept}
            </if>
            <if test="intodate != null">
                and intodate = #{intodate}
            </if>
            <if test="applyDate != null">
                and apply_date = #{applyDate}
            </if>
            <if test="jopUnderstand != null and jopUnderstand != ''">
                and jop_understand = #{jopUnderstand}
            </if>
            <if test="growup != null and growup != ''">
                and growup = #{growup}
            </if>
            <if test="deficiency != null and deficiency != ''">
                and deficiency = #{deficiency}
            </if>
            <if test="regularizationState != null">
                and regularization_state = #{regularizationState}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="regularizationid" useGeneratedKeys="true">
        insert into oa.emp_regularization(title, applicant, apply_dept, regularization_emp, regularization_dept, intodate, apply_date, jop_understand, growup, deficiency, regularization_state)
        values (#{title}, #{applicant}, #{applyDept}, #{regularizationEmp}, #{regularizationDept}, #{intodate}, #{applyDate}, #{jopUnderstand}, #{growup}, #{deficiency}, #{regularizationState})
    </insert>

    <insert id="insertBatch" keyProperty="regularizationid" useGeneratedKeys="true">
        insert into oa.emp_regularization(title, applicant, apply_dept, regularization_emp, regularization_dept,
        intodate, apply_date, jop_understand, growup, deficiency, regularization_state)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.title}, #{entity.applicant}, #{entity.applyDept}, #{entity.regularizationEmp},
            #{entity.regularizationDept}, #{entity.intodate}, #{entity.applyDate}, #{entity.jopUnderstand},
            #{entity.growup}, #{entity.deficiency}, #{entity.regularizationState})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="regularizationid" useGeneratedKeys="true">
        insert into oa.emp_regularization(title, applicant, apply_dept, regularization_emp, regularization_dept,
        intodate, apply_date, jop_understand, growup, deficiency, regularization_state)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.title}, #{entity.applicant}, #{entity.applyDept}, #{entity.regularizationEmp},
            #{entity.regularizationDept}, #{entity.intodate}, #{entity.applyDate}, #{entity.jopUnderstand},
            #{entity.growup}, #{entity.deficiency}, #{entity.regularizationState})
        </foreach>
        on duplicate key update
        title = values(title) , applicant = values(applicant) , apply_dept = values(apply_dept) , regularization_emp =
        values(regularization_emp) , regularization_dept = values(regularization_dept) , intodate = values(intodate) ,
        apply_date = values(apply_date) , jop_understand = values(jop_understand) , growup = values(growup) , deficiency
        = values(deficiency) , regularization_state = values(regularization_state)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update oa.emp_regularization
        <set>
            <if test="title != null and title != ''">
                title = #{title},
            </if>
            <if test="applicant != null and applicant != ''">
                applicant = #{applicant},
            </if>
            <if test="applyDept != null and applyDept != ''">
                apply_dept = #{applyDept},
            </if>
            <if test="regularizationEmp != null and regularizationEmp != ''">
                regularization_emp = #{regularizationEmp},
            </if>
            <if test="regularizationDept != null and regularizationDept != ''">
                regularization_dept = #{regularizationDept},
            </if>
            <if test="intodate != null">
                intodate = #{intodate},
            </if>
            <if test="applyDate != null">
                apply_date = #{applyDate},
            </if>
            <if test="jopUnderstand != null and jopUnderstand != ''">
                jop_understand = #{jopUnderstand},
            </if>
            <if test="growup != null and growup != ''">
                growup = #{growup},
            </if>
            <if test="deficiency != null and deficiency != ''">
                deficiency = #{deficiency},
            </if>
            <if test="regularizationState != null">
                regularization_state = #{regularizationState},
            </if>
        </set>
        where regularizationid = #{regularizationid}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from oa.emp_regularization where regularizationid = #{regularizationid}
    </delete>

</mapper>

